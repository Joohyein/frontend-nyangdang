[{"C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\index.js":"1","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\reportWebVitals.js":"2","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\App.js":"3","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\shared\\Router.jsx":"4","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\pages\\Fixcontent.jsx":"5","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\pages\\Main.jsx":"6","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\pages\\Detail.jsx":"7","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\pages\\Uploadcontent.jsx":"8","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\features\\SignupForm\\SignupForm.jsx":"9","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\features\\LoginForm\\LoginForm.jsx":"10","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\features\\DetailForm\\DetailForm.jsx":"11","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\features\\FixcontentForm\\FixcontentForm.jsx":"12","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\features\\UploadcontentForm\\UploadcontentForm.jsx":"13","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\features\\MainForm\\MainForm.jsx":"14","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\features\\SignupForm\\SignupFormStyled.jsx":"15","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\hook\\useInput.jsx":"16","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\features\\LoginForm\\LoginFormStyled.jsx":"17","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\features\\DetailForm\\DetailFormStyled.jsx":"18","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\ui\\Header\\Header.jsx":"19","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\features\\UploadcontentForm\\UploadcontentFormStyled.jsx":"20","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\features\\MainForm\\MainFormStyled.jsx":"21","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\axios\\api.jsx":"22","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\ui\\Header\\HeaderStyled.jsx":"23"},{"size":356,"mtime":1677503268475,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1677503268477,"results":"26","hashOfConfig":"25"},{"size":315,"mtime":1677503268472,"results":"27","hashOfConfig":"25"},{"size":879,"mtime":1677560987871,"results":"28","hashOfConfig":"25"},{"size":201,"mtime":1677503268461,"results":"29","hashOfConfig":"25"},{"size":167,"mtime":1677506716586,"results":"30","hashOfConfig":"25"},{"size":177,"mtime":1677503268460,"results":"31","hashOfConfig":"25"},{"size":217,"mtime":1677503268466,"results":"32","hashOfConfig":"25"},{"size":4251,"mtime":1677503268441,"results":"33","hashOfConfig":"25"},{"size":4123,"mtime":1677503268431,"results":"34","hashOfConfig":"25"},{"size":2067,"mtime":1677562834756,"results":"35","hashOfConfig":"25"},{"size":133,"mtime":1677503268427,"results":"36","hashOfConfig":"25"},{"size":2799,"mtime":1677503268445,"results":"37","hashOfConfig":"25"},{"size":1706,"mtime":1677552715591,"results":"38","hashOfConfig":"25"},{"size":1649,"mtime":1677503268443,"results":"39","hashOfConfig":"25"},{"size":405,"mtime":1677503268458,"results":"40","hashOfConfig":"25"},{"size":1989,"mtime":1677503268433,"results":"41","hashOfConfig":"25"},{"size":2927,"mtime":1677506057531,"results":"42","hashOfConfig":"25"},{"size":325,"mtime":1677506105814,"results":"43","hashOfConfig":"25"},{"size":2027,"mtime":1677503268447,"results":"44","hashOfConfig":"25"},{"size":1611,"mtime":1677552912469,"results":"45","hashOfConfig":"25"},{"size":502,"mtime":1677561843892,"results":"46","hashOfConfig":"25"},{"size":614,"mtime":1677551283016,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"5dpmbm",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\index.js",[],[],[],"C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\reportWebVitals.js",[],[],"C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\App.js",["122"],[],"import { QueryClient, QueryClientProvider, useMutation } from \"react-query\";\r\nimport Router from \"./shared/Router\";\r\nconst queryClient = new QueryClient();\r\n\r\nfunction App() {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <Router />\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\shared\\Router.jsx",[],[],"C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\pages\\Fixcontent.jsx",[],[],"C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\pages\\Main.jsx",[],[],"C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\pages\\Detail.jsx",[],[],"C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\pages\\Uploadcontent.jsx",[],[],"C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\features\\SignupForm\\SignupForm.jsx",["123","124"],[],"import { useNavigate } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport useInput from \"../../../hook/useInput\";\r\nimport { StContainerForm, StInput, StLabel, StIdBox, StPwBox, StContainer, StInputBox, StButtonCheck, StButton } from \"./SignupFormStyled\";\r\nimport { useCallback, useEffect, useState } from 'react';\r\n\r\nfunction SignupForm() {\r\n  const navigate = useNavigate();\r\n\r\n  const [userId, changeUserId ] = useInput((e)=>e);\r\n  const [userPw, changeUserPw ] = useInput((e)=>e);\r\n  const [isPwConfirm, setIsPwConfirm] = useState(false);\r\n  const [pwConfirm, changePwConfirm, resetPwConfirm] = useInput((e)=>e);\r\n  const [cookies, setCookies] = useCookies(['user']);\r\n  const [idCheck, setIdCheck] = useState(false);\r\n\r\n  const BASE_URL = \"http://3.36.51.159:8080/api/user\";\r\n\r\n  console.log(idCheck);\r\n\r\n  const pwCheck = () => {\r\n    if(userPw !== pwConfirm){\r\n      alert(\"비밀번호가 일치하지 않습니다\");\r\n      resetPwConfirm();\r\n    } else {\r\n      setIsPwConfirm(true);\r\n    }\r\n  }\r\n\r\n  const onIdCheckHandler = async() => {\r\n    // 아이디 중복확인\r\n    await axios.post(`${BASE_URL}/signup`, {\r\n      username:userId,\r\n    }, {\r\n      withCredentials:true,\r\n    })\r\n    .then((res)=>{\r\n      console.log(res);\r\n      setIdCheck(true);\r\n    })\r\n    .catch((error)=>{\r\n      console.log(error);\r\n    })\r\n  };\r\n\r\n  // 아이디 중복확인\r\n  useEffect(()=>{\r\n    setIdCheck(false);\r\n  },[userId])\r\n  // 비밀번호 확인\r\n  useEffect(()=>{\r\n    setIsPwConfirm(false);\r\n  }, [pwConfirm]);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    console.log(111);\r\n    if(userId === \"\"){\r\n      alert (\"아이디를 입력해주세요\");\r\n      return;\r\n    }\r\n    if(userPw === \"\") {\r\n      alert(\"비밀번호를 입력해주세요\");\r\n      return;\r\n    }\r\n    if(pwConfirm === \"\") {\r\n      alert(\"비밀번호확인을 입력해주세요\");\r\n      return;\r\n    }\r\n    pwCheck();\r\n    if(!isPwConfirm) return;\r\n\r\n    // 아이디, 비밀번호, 비밀번호 확인 입력 후 회원가입\r\n    const body = {\r\n      username: userId,\r\n      password: userPw,\r\n    };\r\n    await axios.post(`${BASE_URL}/signup`, body, {\r\n      withCredentials: true,\r\n    })\r\n    .then((res) => {\r\n      setCookies('user', res.data.id);\r\n      // console.log(\"res1\",res);\r\n      alert(\"회원가입 성공\");\r\n      navigate('/login');\r\n      return res;\r\n    })\r\n    .catch((error)=>{\r\n      console.log(error);\r\n      return error;\r\n    })\r\n  }\r\n\r\n  const keyDownHandler = (e) => {\r\n    if(e.key === \"Enter\") {return submitHandler};\r\n  }\r\n\r\n  return (\r\n    <StContainer>\r\n      <h3>회원가입</h3>\r\n      <StContainerForm onSubmit={submitHandler}>\r\n        <StIdBox>\r\n          <StLabel htmlFor='id'> 아이디 \r\n            <StInputBox>\r\n              <StInput \r\n                id=\"id\"\r\n                type=\"text\"\r\n                placeholder='아이디를 입력하세요'\r\n                value={userId}\r\n                onChange={changeUserId}\r\n              />\r\n            </StInputBox>\r\n          </StLabel>\r\n          <StButtonCheck type='button' onClick={onIdCheckHandler}> 중복확인 </StButtonCheck>\r\n        </StIdBox>\r\n        <StPwBox>\r\n          <StLabel htmlFor='pw'> 비밀번호 \r\n            <StInputBox>\r\n              <StInput \r\n                id=\"pw\"\r\n                type=\"password\"\r\n                placeholder='비밀번호를 입력하세요' \r\n                value={userPw}\r\n                onChange={changeUserPw}\r\n              />\r\n            </StInputBox>\r\n          </StLabel>\r\n            <StLabel htmlFor='pwConfirm'> 비밀번호 확인  \r\n              <StInputBox>\r\n                  <StInput \r\n                    placeholder=\"비밀번호를 다시 입력해주세요\" \r\n                    id=\"pwConfirm\"\r\n                    type=\"password\"\r\n                    value={pwConfirm}\r\n                    onChange={changePwConfirm}\r\n                    onKeyDown={keyDownHandler}\r\n                  />\r\n              </StInputBox>\r\n            </StLabel>\r\n        </StPwBox>\r\n        <StButton type=\"submit\"> 회원가입 </StButton>\r\n      </StContainerForm>\r\n    </StContainer>\r\n  )\r\n}\r\n\r\nexport default SignupForm;\r\n","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\features\\LoginForm\\LoginForm.jsx",["125","126","127","128"],[],"import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Cookies, useCookies } from 'react-cookie';\r\nimport useInput from '../../../hook/useInput';\r\nimport { StContainerForm, StButton, StInput, StLabel, StBtnBox, StContainer, StInputBox, StImg } from './LoginFormStyled';\r\nimport kakao from \"../../../assets/image/kakao_login_large_narrow.png\";\r\n\r\n\r\nconst url = 'https://kauth.kakao.com/oauth/authorize?client_id=513dbab402347b4ce9abb443337b09a6&redirect_uri=http://localhost:3000/api/user/kakao/callback&response_type=code';\r\nfunction LoginForm() {\r\n  const navigate = useNavigate();\r\n\r\n  const [userId, changeUserId, resetId] = useInput((e) => e);\r\n  const [userPw, changeUserPw, resetPw] = useInput((e) => e);\r\n  const [status, setStatus] = useState(\"인증 되기 전\");\r\n  const [data, setData] = useState([]);\r\n  const [bool, setBool] = useState(false);\r\n  const [cookies, setCookies] = useCookies(['user']); // 'user' : 쿠키 이름\r\n\r\n  const BASE_URL = \"http://3.36.51.159:8080/api/user\";\r\n  // const cookies = new Cookies;\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    if(bool) return;\r\n    if( userId === \"\"){\r\n      alert (\"아이디를 입력해주세요\");\r\n\r\n      return;\r\n    }\r\n    if (userPw === \"\") {\r\n      alert(\"비밀번호를 입력해주세요\");\r\n      return;\r\n    }\r\n    const response = await axios.post(\r\n      `${BASE_URL}/login`,\r\n      {\r\n        username: userId,\r\n        password : userPw,\r\n      }, {withCredentials: true}\r\n    ).then(response => {\r\n      setCookies('user', response.data.id);  // setCookie(쿠키이름, 쿠키에 넣을 값, 옵션)\r\n    }).catch(error => {\r\n      console.log(error)\r\n    });\r\n    resetId();\r\n    resetPw();\r\n    console.log(\"response\", response);\r\n    if (response.status === 200) setStatus(\"인증 완료\");\r\n  };\r\n\r\n  // const getData = async () => {\r\n  //   const response = await axios.get(`${BASE_URL}/`, { withCredentials: true,});\r\n  //   console.log(\"response\", response);\r\n  //   setData(response.data.data);\r\n  // };\r\n\r\n  const getData = async () => {\r\n    const accessToken = cookies.get(\"accessToken\");\r\n    console.log(\"accessToken\", accessToken);\r\n    const response = await axios.get(`${BASE_URL}/signup`,{\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${accessToken}`, // 누가 요청했는 지 알려준다. (토큰 전달)\r\n      },\r\n    });\r\n    setData(response.data.data);\r\n    console.log(response);\r\n  };\r\n\r\n  // const jwtToken = await Login(loginPayload)\r\n  const kakaoBtnClickHandler = () => {\r\n    window.open(url);\r\n  };\r\n\r\n  const keyDownHandler = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      return submitHandler;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StContainer>\r\n      <h3>로그인</h3>\r\n      <StContainerForm onSubmit={submitHandler}>\r\n        <StLabel htmlFor=\"id\">\r\n          {\" \"}\r\n          ID\r\n          <StInputBox>\r\n            <StInput\r\n              id=\"id\"\r\n              type=\"text\"\r\n              placeholder=\"아이디를 입력하세요\"\r\n              value={userId}\r\n              onChange={changeUserId}\r\n            />\r\n          </StInputBox>\r\n        </StLabel>\r\n        <StLabel htmlFor=\"pw\">\r\n          {\" \"}\r\n          PW\r\n          <StInputBox>\r\n            <StInput\r\n              id=\"pw\"\r\n              type=\"password\"\r\n              placeholder=\"비밀번호를 입력하세요\"\r\n              value={userPw}\r\n              onChange={changeUserPw}\r\n              onKeyDown={keyDownHandler}\r\n            />\r\n          </StInputBox>\r\n        </StLabel>\r\n        <StBtnBox>\r\n          <StButton type='submit'> 로그인 </StButton>\r\n          <StButton onClick={()=>{\r\n            navigate('/signup');\r\n              setBool(true);\r\n            }\r\n          }> 회원가입 </StButton>\r\n        </StBtnBox>\r\n        {/* <button onClick={getData}> 리스트 요청 </button> */}\r\n      </StContainerForm>\r\n      <StImg src={kakao} id=\"login-kakao-btn\" onClick={kakaoBtnClickHandler}/>\r\n\r\n    </StContainer>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\features\\DetailForm\\DetailForm.jsx",["129"],[],"C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\features\\FixcontentForm\\FixcontentForm.jsx",[],[],"C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\features\\UploadcontentForm\\UploadcontentForm.jsx",["130","131","132"],[],"import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport useInput from \"../../../hook/useInput\";\r\nimport Header from \"../../ui/Header/Header\";\r\nimport { StContentWrap, StImagebox, StImgInput, StImgInputAdd, StImgLabel, StInput, StButton, StContainer, StLabel, StInputContent, StContentBox, StBtnBox, StTitleBox } from \"./UploadcontentFormStyled\";\r\n\r\nfunction UploadcontentForm() {\r\n  const [title, changeTitle] = useInput(e=>e);\r\n  const [contents, changeContent] = useInput(e=>e);\r\n  // const [image, setImage] = useState();\r\n\r\n  const BASE_URL = \"http://3.36.51.159:8080/api\";\r\n\r\n  // const onChangeImgInputHandler = (e) => {\r\n  //   const img = e.target.files;\r\n  //   const formData = new FormData();\r\n  //   formData.append('image', img);\r\n  //   // console.log(formData);\r\n  //   // for (const keyValue of formData) console.log(keyValue);\r\n  //   setImage(formData);\r\n  // }\r\n\r\n  const onSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    if(!title) {\r\n      alert(\"제목을 입력해주세요\");\r\n      return;\r\n    }\r\n    if(!contents) {\r\n      alert(\"내용을 입력해주세요\");\r\n      return;\r\n    }\r\n    // if(!image){\r\n    //   alert(\"이미지를 첨부해주세요\");\r\n    //   return;\r\n    // }\r\n    const body = {\r\n      title,\r\n      contents,\r\n      // image,\r\n    }\r\n    await axios.post(`${BASE_URL}/blogs`, body, {\r\n      withCredentials: true,\r\n    })\r\n    .then((res)=> {\r\n      console.log(res);\r\n    })\r\n  };\r\n  // const getData = async () => {\r\n  //   const response = await axios.get(`${BASE_URL}/blogs`);\r\n  //   console.log(response);\r\n  // }\r\n  // getData();\r\n  return (\r\n    <>\r\n    <Header />\r\n    <StContainer>\r\n      <StContentWrap onSubmit={onSubmitHandler}>\r\n          <h3>글 작성하기</h3>\r\n          <StTitleBox>\r\n            <StLabel htmlFor=\"title\"> 제목 </StLabel>\r\n            <StInput id=\"title\" value={title} onChange={changeTitle} type={title} maxLength={20} placeholder=\"제목을 입력하세요(20자 이내)\" />\r\n          </StTitleBox>\r\n          <StImagebox>\r\n            <StImgLabel htmlFor=\"file\">\r\n              파일 첨부\r\n            </StImgLabel>\r\n            <StImgInput \r\n              type=\"file\" \r\n              id=\"file\" \r\n              accept=\"image/png, image/jpeg, image/gif\"\r\n              // required\r\n              // onChange={onChangeImgInputHandler}\r\n            />\r\n          </StImagebox>\r\n          <StInputContent value={contents} onChange={changeContent} maxLength={500}  placeholder=\"내용입력하기...(500자 이내)\" type=\"text\" />\r\n          <StBtnBox>\r\n            <StButton>취소</StButton>\r\n            <StButton type=\"submit\">완료</StButton>\r\n          </StBtnBox>\r\n        </StContentWrap>\r\n    </StContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UploadcontentForm;","C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\features\\MainForm\\MainForm.jsx",["133","134"],[],"C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\features\\SignupForm\\SignupFormStyled.jsx",[],[],"C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\hook\\useInput.jsx",[],[],"C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\features\\LoginForm\\LoginFormStyled.jsx",[],[],"C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\features\\DetailForm\\DetailFormStyled.jsx",[],[],"C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\ui\\Header\\Header.jsx",[],[],"C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\features\\UploadcontentForm\\UploadcontentFormStyled.jsx",[],[],"C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\features\\MainForm\\MainFormStyled.jsx",[],[],"C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\axios\\api.jsx",[],[],"C:\\Users\\Colossalyoon\\Documents\\Desktop\\Clone_Folder\\frontend\\nyangdang\\src\\component\\ui\\Header\\HeaderStyled.jsx",[],[],{"ruleId":"135","severity":1,"message":"136","line":1,"column":44,"nodeType":"137","messageId":"138","endLine":1,"endColumn":55},{"ruleId":"135","severity":1,"message":"139","line":6,"column":10,"nodeType":"137","messageId":"138","endLine":6,"endColumn":21},{"ruleId":"135","severity":1,"message":"140","line":15,"column":10,"nodeType":"137","messageId":"138","endLine":15,"endColumn":17},{"ruleId":"135","severity":1,"message":"141","line":4,"column":10,"nodeType":"137","messageId":"138","endLine":4,"endColumn":17},{"ruleId":"135","severity":1,"message":"142","line":16,"column":10,"nodeType":"137","messageId":"138","endLine":16,"endColumn":16},{"ruleId":"135","severity":1,"message":"143","line":17,"column":10,"nodeType":"137","messageId":"138","endLine":17,"endColumn":14},{"ruleId":"135","severity":1,"message":"144","line":59,"column":9,"nodeType":"137","messageId":"138","endLine":59,"endColumn":16},{"ruleId":"135","severity":1,"message":"145","line":12,"column":3,"nodeType":"137","messageId":"138","endLine":12,"endColumn":18},{"ruleId":"135","severity":1,"message":"146","line":2,"column":17,"nodeType":"137","messageId":"138","endLine":2,"endColumn":25},{"ruleId":"135","severity":1,"message":"147","line":5,"column":49,"nodeType":"137","messageId":"138","endLine":5,"endColumn":62},{"ruleId":"135","severity":1,"message":"148","line":5,"column":133,"nodeType":"137","messageId":"138","endLine":5,"endColumn":145},{"ruleId":"135","severity":1,"message":"149","line":10,"column":17,"nodeType":"137","messageId":"138","endLine":10,"endColumn":26},{"ruleId":"135","severity":1,"message":"150","line":11,"column":16,"nodeType":"137","messageId":"138","endLine":11,"endColumn":27},"no-unused-vars","'useMutation' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'cookies' is assigned a value but never used.","'Cookies' is defined but never used.","'status' is assigned a value but never used.","'data' is assigned a value but never used.","'getData' is assigned a value but never used.","'StAddCommentBox' is defined but never used.","'useState' is defined but never used.","'StImgInputAdd' is defined but never used.","'StContentBox' is defined but never used.","'useEffect' is defined but never used.","'useLocation' is defined but never used."]